#include <iostream>
#include <string>
#define Maxheight 17
#define MaxWidth 18

using namespace std;

void printBoard (char board[][18],char shapes[][3]);

int main () {
  char board[Maxheight][MaxWidth] = {{'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'},
                                     {'0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'}};

  char shapes[3][3] = {{'X','X','X'},{'0','X','0'},{'0','X','0'}};
  /*for (int i = 0; i < 3; ++i) {
    for (int j =0; j < 3; ++j) {
      cout<<shapes[i][j];
    }
    cout<<endl;
  }*/
  printBoard(board,shapes);
}

void printBoard (char board[][18],char shapes[][3]) {
  int xIdx = 4,yIdx = 4;
  int xPos = 0, yPos = 0;
  for (int i = 0; i < Maxheight; ++i) {
    for (int j = 0; j < MaxWidth; ++j) {
      if ((i == yIdx && j == xIdx)||(i == yIdx && j == xIdx+1)||(i == yIdx && j == xIdx+2)||(i == yIdx+1 && j == xIdx)||(i == yIdx+1 && j == xIdx+1)||(i == yIdx+1 && j == xIdx+2)||(i == yIdx+2 && j == xIdx)||(i == yIdx+2 && j == xIdx+1)||(i == yIdx+2 && j == xIdx+2)){
        cout<<shapes[yPos][xPos];
        xPos+=1;
        if (xPos>2) {
          yPos+=1;
          xPos=0;
        }
      }
      else{
        cout<<board[i][j];
      }
    }
    cout<<endl;
  }
}
